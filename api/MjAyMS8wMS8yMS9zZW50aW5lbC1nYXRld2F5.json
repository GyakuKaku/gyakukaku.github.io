{"title":"sentinel学习笔记-通过gateway集成实现流控","date":"2021-01-21T05:07:30.000Z","date_formatted":{"ll":"Jan 21, 2021","L":"01/21/2021","MM-DD":"01-21"},"thumbnail":"2021/01/21/sentinel-gateway/./banner.png","link":"2021/01/21/sentinel-gateway","tags":["Java","gateway","sentinel","spring"],"categories":["Spring"],"updated":"2021-01-21T05:58:48.042Z","content":"<h1 id=\"gateway集成sentinel实现流控\">Gateway集成Sentinel实现流控<a title=\"#gateway集成sentinel实现流控\" href=\"#gateway集成sentinel实现流控\"></a></h1>\n<h2 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h2>\n<p>随着分布式系统变得越来越流行，服务之间的可靠性变得比以往任何时候都更加重要。Sentinel以“流”为切入点，并在<strong>流控制</strong>， <strong>流量整形</strong>，<strong>电路中断</strong>和<strong>系统自适应保护</strong>等多个领域<strong>工作</strong>，以确保微服务的可靠性和弹性<a href=\"#refer-anchor-1\"><sup>1</sup></a>。</p>\n<p>Sentinel具有以下功能：</p>\n<ul>\n<li><strong>丰富的适用场景</strong>：Sentinel已在阿里巴巴中广泛使用，并且在过去10年中涵盖了Double-11（11.11）购物节中几乎所有的核心场景，例如“ Second Kill”需要将突发流量限制为满足系统容量，消息峰值削波和谷值填充，为不可靠的下游服务而中断电路，集群流量控制等。</li>\n<li><strong>实时监控</strong>：Sentinel还提供了实时监控功能。您可以实时查看单个计算机的运行时信息，以及少于500个节点的群集的聚合运行时信息。</li>\n<li><strong>广泛的开源生态系统</strong>：Sentinel提供了与常用框架和库（如Spring Cloud和Dubbo）的现成集成。您只需将适配器依赖项添加到服务中即可轻松使用Sentinel。</li>\n<li><strong>多种语言支持</strong>：Sentinel已为Java，<a href=\"https://github.com/alibaba/sentinel-golang\" target=\"_blank\">Go</a>和<a href=\"https://github.com/alibaba/sentinel-cpp\" target=\"_blank\">C ++</a>提供了本机支持。</li>\n<li><strong>各种SPI扩展</strong>：Sentinel提供易于使用的SPI扩展接口，可让您快速自定义逻辑，例如，自定义规则管理，调整数据源等。</li>\n</ul>\n<h2 id=\"应用\">应用<a title=\"#应用\" href=\"#应用\"></a></h2>\n<h3 id=\"简介\">简介<a title=\"#简介\" href=\"#简介\"></a></h3>\n<ul>\n<li>sentinel分为core和dashboard两个部分</li>\n<li>core需要集成到服务和服务一起启动，不对控制台有任何依赖。</li>\n<li>dashboard控制台为独立服务，完全依赖与core，可以通过控制台向core推送临时规则。</li>\n<li>dashboard中临时配置的规则无法持久化，sentinel的规则可通过本地文件、mysql、redis或nacos等方式存储，本次采用nacos配置文件进行规则的存储。</li>\n</ul>\n<h3 id=\"sentinel流控功能\">Sentinel流控功能<a title=\"#sentinel流控功能\" href=\"#sentinel流控功能\"></a></h3>\n<h4 id=\"通过nacos进行配置\">通过nacos进行配置<a title=\"#通过nacos进行配置\" href=\"#通过nacos进行配置\"></a></h4>\n<p>通过nacos进行规则的持久化，配置内容如下：</p>\n<p><img src=\"/2021/01/21/sentinel-gateway/sentinel1.png\" alt class=\"φcx\"></p>\n<ul>\n<li>eager: 是否主动连接到控制台。</li>\n<li>transport:\n<ul>\n<li>dashboard: 访问控制台的url。</li>\n</ul>\n</li>\n<li>datasourse: 配置文件相关信息。\n<ul>\n<li>这一级为配置文件变量名称，无实际意义，不重复即可无需与nacos配置文件对应(如图中api_group,flow)。\n<ul>\n<li>serverAddr:访问nacos的url。</li>\n<li>namaspace：nacos配置文件命名空间。</li>\n<li>dataId：配置文件dataId。</li>\n<li>groupId：配置文件group。</li>\n<li>ruleType：nacos配置文件类型（GW-API-GROUP和GW-FLOW）。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"nacos配置文件类型\">nacos配置文件类型<a title=\"#nacos配置文件类型\" href=\"#nacos配置文件类型\"></a></h4>\n<p>现在采用通过nacos进行流控规则配置的方式，配置文件共有两种：</p>\n<ol>\n<li>\n<p>Api分组配置文件（GW-API-GROUP），通过请求url或url正则进行api分组，限流规则GW-API-GROUP会使用到API分组的名称：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"apiName\"</span>: <span class=\"string\">\"userInfo\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"predicateItems\"</span>: [&#123;</span><br><span class=\"line\">            <span class=\"attr\">\"pattern\"</span>: <span class=\"string\">\"/user/userInfo\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"matchStrategy\"</span>: <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>配置成功后会在控制台的api管理中显示：</p>\n<p><img src=\"/2021/01/21/sentinel-gateway/sentinel3.png\" alt class=\"φcx\"></p>\n</li>\n<li>\n<p>流控规则配置文件（GW-FLOW），用于配置具体的流控规则：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"resource\"</span>: <span class=\"string\">\"app-info-consumer\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"resourceMode\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"grade\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"count\"</span>: <span class=\"number\">3.0</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"intervalSec\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"controlBehavior\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"burst\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"maxQueueingTimeoutMs\"</span>: <span class=\"number\">500</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"resource\"</span>: <span class=\"string\">\"admin-server-api\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"resourceMode\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"grade\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"count\"</span>: <span class=\"number\">3.0</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"intervalSec\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"controlBehavior\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"burst\"</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"maxQueueingTimeoutMs\"</span>: <span class=\"number\">500</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"paramItem\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"parseStrategy\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"fieldName\"</span>: <span class=\"string\">\"Authorization\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"resource\"</span>: <span class=\"string\">\"userInfo\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"resourceMode\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"grade\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"count\"</span>: <span class=\"number\">1.0</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"intervalSec\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"controlBehavior\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"burst\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"maxQueueingTimeoutMs\"</span>: <span class=\"number\">500</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>配置成功后会在控制台的api管理中显示：</p>\n<p><img src=\"/2021/01/21/sentinel-gateway/sentinel5.png\" alt class=\"φcx\"></p>\n<h3 id=\"流控规则\">流控规则<a title=\"#流控规则\" href=\"#流控规则\"></a></h3>\n<p>Gateway集成Sentinel后的流控规则有两种（根据API分组和根据路由节点），配置顶如下：</p>\n<ul>\n<li>\n<p>resource：资源名称（节点流控填Gateway的路由名称，Api流控填之前Api分组配置中Api的分组名称）。</p>\n</li>\n<li>\n<p>resourceMode：限流规则类型。</p>\n<p>​\t0-根据route进行分组流控，通过Gateway中配置的路由节点进行流控，只针对符合规则的请求对route的节点进行的访问进行流控，即使是访问该节点中的不同接口。</p>\n<p>​\t1-根据Api分组进行流控，只针对符合规则的请求对route的节点进行访问进行流控，指针对符合规则的请求对所选Api进行的访问进行流控，即使访问不同路由中的接口。</p>\n</li>\n<li>\n<p>grade：阈值类型。1-qps进行流控。 2-并发线程数进行流控。</p>\n</li>\n<li>\n<p>count：单位时间内访问次数限制。</p>\n</li>\n<li>\n<p>intervalSec：间隔时间（秒）。</p>\n</li>\n<li>\n<p>controlBehavior：流控效果。0-直接拒绝 1-匀速排队。</p>\n</li>\n<li>\n<p>burst：应对突发请求时额外允许的请求数目（直接拒绝模式生效）。</p>\n</li>\n<li>\n<p>maxQueueingTimeoutMs：匀速排队最长时长（匀速排队模式生效，单位毫秒）。</p>\n</li>\n<li>\n<p>paramItem：参数限流配置</p>\n<ul>\n<li>parseStrategy：参数限流类型。0-根据ip。1-根据host。2-根据header。3-根据url参数。4-根据cookie。</li>\n<li>fieldName：header、cookie和url参数限流时，填写参数或header的key名称。</li>\n</ul>\n</li>\n</ul>\n<p>以上参数对应sentinel控制台直接配置的参数，如图：</p>\n<p><img src=\"/2021/01/21/sentinel-gateway/sentinel6.png\" alt class=\"φcx\"></p>\n</li>\n</ol>\n<h3 id=\"自定义流控返回值\">自定义流控返回值<a title=\"#自定义流控返回值\" href=\"#自定义流控返回值\"></a></h3>\n<p>在服务加载时通过GatewayCallbackManager提供的方法设置http请求的返回值：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doInit</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//自定义限流异常处理</span></span><br><span class=\"line\">    GatewayCallbackManager.setBlockHandler((serverWebExchange, throwable) -&gt; ServerResponse.status(<span class=\"number\">200</span>)</span><br><span class=\"line\">            .contentType(MediaType.APPLICATION_JSON)</span><br><span class=\"line\">            .body(BodyInserters.fromValue(<span class=\"keyword\">new</span> JSONResult(<span class=\"keyword\">null</span>,<span class=\"number\">429</span>,<span class=\"string\">\"访问过于频繁\"</span>,<span class=\"keyword\">false</span>))));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果\">效果<a title=\"#效果\" href=\"#效果\"></a></h2>\n<p><img src=\"/2021/01/21/sentinel-gateway/sentinel7.png\" alt class=\"φcx\"></p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<div id=\"refer-anchor-1\"></div>\n<p>- [1] <a href=\"https://github.com/alibaba/Sentinel\" target=\"_blank\">sentinel官方网站</a></p>\n","next":{"title":"redis实现分布式锁","link":"2020/09/02/redisLock"},"plink":"https://lxjf0y.coding-pages.com/2021/01/21/sentinel-gateway/","toc":[{"id":"gateway集成sentinel实现流控","title":"Gateway集成Sentinel实现流控","index":"1","children":[{"id":"前言","title":"前言","index":"1.1"},{"id":"应用","title":"应用","index":"1.2","children":[{"id":"简介","title":"简介","index":"1.2.1"},{"id":"sentinel流控功能","title":"Sentinel流控功能","index":"1.2.2"},{"id":"流控规则","title":"流控规则","index":"1.2.3"},{"id":"自定义流控返回值","title":"自定义流控返回值","index":"1.2.4"}]},{"id":"效果","title":"效果","index":"1.3"},{"id":"参考","title":"参考","index":"1.4"}]}],"copyright":{"author":"Gyaku","license":"个人学习笔记，如有不准确的描述，还请见谅。转载请注明出处。","link":"<a href=\"https://lxjf0y.coding-pages.com/2021/01/21/sentinel-gateway/\" title=\"sentinel学习笔记-通过gateway集成实现流控\">https://lxjf0y.coding-pages.com/2021/01/21/sentinel-gateway/</a>"}}