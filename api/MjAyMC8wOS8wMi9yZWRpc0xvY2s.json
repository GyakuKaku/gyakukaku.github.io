{"title":"redis实现分布式锁","date":"2020-09-02T04:03:46.000Z","date_formatted":{"ll":"Sep 2, 2020","L":"09/02/2020","MM-DD":"09-02"},"thumbnail":"2020/09/02/redisLock/./banner.png","link":"2020/09/02/redisLock","tags":["分布式锁"],"categories":["微服务"],"updated":"2020-09-29T05:35:04.063Z","content":"<h2 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h2>\n<p>工作中遇到了需要使用的场景，照着网上的帖子写了个service，留一篇记录一下回来再研究。</p>\n<h2 id=\"实现\">实现<a title=\"#实现\" href=\"#实现\"></a></h2>\n<p>redis锁service类:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisLockService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisTemplate redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 加锁，自旋重试三次</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 锁key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 锁value</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> expireTime 时长</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> TimeUnit 时长单位</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">lock</span><span class=\"params\">(String key, String value, <span class=\"keyword\">long</span> expireTime, TimeUnit timeUnit)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> locked = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> tryCount = <span class=\"number\">3</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!locked &amp;&amp; tryCount &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            locked = redisTemplate.opsForValue().setIfAbsent(key, value, expireTime, timeUnit);</span><br><span class=\"line\">            tryCount--;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">300</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"加锁异常\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> locked;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 使用lua脚本解锁，不会解除别人锁</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 锁key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 锁value</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">unlockLua</span><span class=\"params\">(String key, String value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key == <span class=\"keyword\">null</span> || value == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        DefaultRedisScript&lt;Long&gt; redisScript = <span class=\"keyword\">new</span> DefaultRedisScript();</span><br><span class=\"line\">        <span class=\"comment\">//用于解锁的lua脚本位置</span></span><br><span class=\"line\">        redisScript.setLocation(<span class=\"keyword\">new</span> ClassPathResource(<span class=\"string\">\"unlock.lua\"</span>));</span><br><span class=\"line\">        redisScript.setResultType(Long<span class=\"class\">.<span class=\"keyword\">class</span>)</span>;</span><br><span class=\"line\">        <span class=\"comment\">//没有指定序列化方式，默认使用上面配置的</span></span><br><span class=\"line\">        Object result = redisTemplate.execute(redisScript, Arrays.asList(key), value);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result.equals(Long.valueOf(<span class=\"number\">1</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用lua脚本是为了保证解锁操作的原子性，将查锁和解锁操作一起提交，脚本放在resources根目录下，用spring的ClassPathResource类可以直接取到，lua脚本内容如下:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if redis.call('get',KEYS[1]) == ARGV[1] then</span><br><span class=\"line\">    return redis.call('del',KEYS[1])</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"built_in\">end</span></span><br></pre></td></tr></table></figure>\n","prev":{"title":"sentinel_gateway","link":"2021/01/21/sentinel-gateway"},"next":{"title":"spring cloud学习笔记——服务治理Eureka","link":"2020/07/11/eureka"},"plink":"https://lxjf0y.coding-pages.com/2020/09/02/redisLock/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"实现","title":"实现","index":"2"}],"copyright":{"author":"Gyaku","license":"个人学习笔记，如有不准确的描述，还请见谅。转载请注明出处。","link":"<a href=\"https://lxjf0y.coding-pages.com/2020/09/02/redisLock/\" title=\"redis实现分布式锁\">https://lxjf0y.coding-pages.com/2020/09/02/redisLock/</a>"}}