{"title":"spring cloud学习笔记——服务治理Eureka","date":"2020-07-11T12:34:39.000Z","date_formatted":{"ll":"Jul 11, 2020","L":"07/11/2020","MM-DD":"07-11"},"thumbnail":"2020/07/11/eureka/./banner_.jpg","link":"2020/07/11/eureka","tags":["Eureka","spring cloud","微服务"],"categories":["微服务"],"updated":"2020-08-18T07:04:56.635Z","content":"<h2 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h2>\n<p>spring cloud为开发人员提供了工具，以快速构建分布式系统中的某些常见模式（例如，配置管理，服务发现，断路器，智能路由，微代理，控制总线，一次性令牌，全局锁，领导选举，分布式会话，群集状态）。分布式系统的协调导致了样板式样，并且使用spring cloud开发人员可以快速站起来实现这些样板的服务和应用程序。<a href=\"#refer-anchor-1\"><sup>1</sup></a>。这篇文章开始，总结对spring cloud和微服务等知识的学习和实践。</p>\n<h2 id=\"简介\">简介<a title=\"#简介\" href=\"#简介\"></a></h2>\n<p>服务发现是基于微服务的体系结构的关键原则之一。尝试手动配置每个客户端或某种形式的约定可能非常困难并且非常脆弱。Eureka是Netflix Service Discovery服务器和客户端，它基于Netflix Eureka做了二次封装。可以将服务器配置和部署为高度可用，可以以集群模式部署多个Eureka注册中心微服务来应对单点故障。每个服务器将有关已注册服务的状态注册到其他服务器<a href=\"#refer-anchor-2\"><sup>2</sup></a>。</p>\n<h2 id=\"应用\">应用<a title=\"#应用\" href=\"#应用\"></a></h2>\n<h3 id=\"父工程\">父工程<a title=\"#父工程\" href=\"#父工程\"></a></h3>\n<p>首先先创建一个父工程，并在父工程的pom文件中统一jar包的版本号：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">source.encoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">source.encoding</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">java.version</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">java.version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.encoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.encoding</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mysql-connector-java.version</span>&gt;</span>5.1.34<span class=\"tag\">&lt;/<span class=\"name\">mysql-connector-java.version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">activiti.version</span>&gt;</span>5.22<span class=\"tag\">&lt;/<span class=\"name\">activiti.version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">spring-boot.version</span>&gt;</span>1.4.7.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">spring-boot.version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cas.server.version</span>&gt;</span>3.4.3.1<span class=\"tag\">&lt;/<span class=\"name\">cas.server.version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cas.client.version</span>&gt;</span>3.1.12<span class=\"tag\">&lt;/<span class=\"name\">cas.client.version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven-source-plugin.version</span>&gt;</span>2.0.3<span class=\"tag\">&lt;/<span class=\"name\">maven-source-plugin.version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven-compiler-plugin.version</span>&gt;</span>2.3.2<span class=\"tag\">&lt;/<span class=\"name\">maven-compiler-plugin.version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven-assembly-plugin.version</span>&gt;</span>2.2.1<span class=\"tag\">&lt;/<span class=\"name\">maven-assembly-plugin.version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven-deploy-plugin.version</span>&gt;</span>2.4<span class=\"tag\">&lt;/<span class=\"name\">maven-deploy-plugin.version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven-war-plugin.version</span>&gt;</span>2.1.1<span class=\"tag\">&lt;/<span class=\"name\">maven-war-plugin.version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven-jar-plugin.version</span>&gt;</span>2.3.2<span class=\"tag\">&lt;/<span class=\"name\">maven-jar-plugin.version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">spring-cloud.version</span>&gt;</span>Greenwich.RC1<span class=\"tag\">&lt;/<span class=\"name\">spring-cloud.version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后在加入即将新建的eureka-server服务模块：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">modules</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>eureka-server<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>dependencyManagement标签的作用是让子项目Maven的pom文件中引入jar包时，无需声明版本号，maven会自动向父工程中查找dependencyManagement标签。注意在此处引入并不会真的引入jar包，只是声明版本，我用的spring cloud版本是Greenwich.RC1：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"eureka服务端\">Eureka服务端<a title=\"#eureka服务端\" href=\"#eureka服务端\"></a></h3>\n<p>在父工程下创建一个服务中心服务eureka-service，并修改该服务的pom文件，继承父工程的pom。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>gyaku.springcloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在pom文件中引入netflix-eureka-server：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>接着在注册中心的启动类上添加注解@EnableEurekaServer，这样该工程就会被视为服务注册中心：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableEurekaServer</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EurekaServerApplication</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(EurekaServerApplication<span class=\"class\">.<span class=\"keyword\">class</span>, <span class=\"title\">args</span>)</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后修改该服务的配置文件application.properties：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">server.port</span>=<span class=\"string\">9300</span></span><br><span class=\"line\"><span class=\"meta\">spring.application.name</span>=<span class=\"string\">eureka-server</span></span><br><span class=\"line\"><span class=\"comment\"># 不向注册中心注册自己</span></span><br><span class=\"line\"><span class=\"meta\">eureka.client.register-with-eureka</span>=<span class=\"string\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 不去检索服务</span></span><br><span class=\"line\"><span class=\"meta\">eureka.client.fetch-registry</span>=<span class=\"string\">false</span></span><br></pre></td></tr></table></figure>\n<p>启动服务,在浏览器中访问http://localhost:9300看到eureka正常启动：</p>\n<p><img src=\"/2020/07/11/eureka/eureka1.png\" alt class=\"φcx\"></p>\n<h3 id=\"eureka客户端\">Eureka客户端<a title=\"#eureka客户端\" href=\"#eureka客户端\"></a></h3>\n<p>接下来新建一个工程向Eureka服务端中注册自己，在父工程下创建admin-server服务，在pom文件中继承父工程的pom后引入netflix-eureka-client：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>接着在启动类上添加注解@EnableEurekaClient，然后修改配置文件：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">server.port</span>=<span class=\"string\">9310</span></span><br><span class=\"line\"><span class=\"meta\">spring.application.name</span>=<span class=\"string\">admin-server</span></span><br><span class=\"line\"><span class=\"meta\">eureka.client.serviceUrl.defaultZone</span>=<span class=\"string\">http://localhost:9300/eureka/</span></span><br><span class=\"line\"><span class=\"meta\">eureka.client.healthcheck.enabled</span>=<span class=\"string\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 续约更新时间间隔（单位秒，默认30秒）</span></span><br><span class=\"line\"><span class=\"meta\">eureka.instance.lease-renewal-interval-in-seconds</span>=<span class=\"string\">10</span></span><br><span class=\"line\"><span class=\"comment\"># 续约到期时间（单位秒，默认90秒）</span></span><br><span class=\"line\"><span class=\"meta\">eureka.instance.lease-expiration-duration-in-seconds</span>=<span class=\"string\">10</span></span><br></pre></td></tr></table></figure>\n<p>重新访问http://localhost:9300，admin-server已经成功注册：</p>\n<p><img src=\"/2020/07/11/eureka/eureka2.png\" alt class=\"φcx\"></p>\n<h3 id=\"eureka集群\">Eureka集群<a title=\"#eureka集群\" href=\"#eureka集群\"></a></h3>\n<p>简介中说到Eureka可以以集群模式部署，修改eureka-server的配置文件。prefer-ip-address设为true表示在猜测主机名时，应优先使用服务器的IP地址，而不使用操作系统报告的主机名。我们将两个eureka-service都起在了本地且设置了hostname，所以prefer-ip-address设为false，配置文件如下：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">server.port</span>=<span class=\"string\">9300</span></span><br><span class=\"line\"><span class=\"meta\">spring.application.name</span>=<span class=\"string\">eureka-server</span></span><br><span class=\"line\"><span class=\"meta\">eureka.client.serviceUrl.defaultZone</span>=<span class=\"string\">http://eureka2.com:9301/eureka</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">eureka.instance.prefer-ip-address</span>=<span class=\"string\">false</span></span><br><span class=\"line\"><span class=\"meta\">eureka.instance.hostname</span>=<span class=\"string\">eureka1.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#关闭自我保护模式</span></span><br><span class=\"line\"><span class=\"meta\">eureka.server.enable-self-preservation</span>=<span class=\"string\">false</span></span><br><span class=\"line\"><span class=\"comment\">#续期时间，清理无效服务的时间间隔</span></span><br><span class=\"line\"><span class=\"meta\">eureka.server.eviction-interval-timer-in-ms</span>=<span class=\"string\">10000</span></span><br></pre></td></tr></table></figure>\n<p>在idea中新建一个eureka-server配置并覆盖以下配置：</p>\n<p><img src=\"/2020/07/11/eureka/eureka4.png\" alt class=\"φcx\"></p>\n<p>修改本地host文件，添加以下内容：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1 eureka1.com</span><br><span class=\"line\">127.0.0.1 eureka2.com</span><br></pre></td></tr></table></figure>\n<p>重新访问http://localhost:9300，看到9301接口的服务注册成功，且分片可用：</p>\n<p><img src=\"/2020/07/11/eureka/eureka3.png\" alt class=\"φcx\"></p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<div id=\"refer-anchor-1\"></div>\n<p>- [1] <a href=\"https://spring.io/projects/spring-cloud\" target=\"_blank\">spring官方网站</a></p>\n<div id=\"refer-anchor-2\"></div>\n<p>- [2] <a href=\"https://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/1.3.1.RELEASE\" target=\"_blank\">spring官方网站 Spring Cloud Netflix文档</a></p>\n","prev":{"title":"redis实现分布式锁","link":"2020/09/02/redisLock"},"next":{"title":"websocket学习笔记","link":"2020/07/02/tcp"},"plink":"https://lxjf0y.coding-pages.com/2020/07/11/eureka/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"简介","title":"简介","index":"2"},{"id":"应用","title":"应用","index":"3","children":[{"id":"父工程","title":"父工程","index":"3.1"},{"id":"eureka服务端","title":"Eureka服务端","index":"3.2"},{"id":"eureka客户端","title":"Eureka客户端","index":"3.3"},{"id":"eureka集群","title":"Eureka集群","index":"3.4"}]},{"id":"参考","title":"参考","index":"4"}],"copyright":{"author":"Gyaku","license":"个人学习笔记，如有不准确的描述，还请见谅。转载请注明出处。","link":"<a href=\"https://lxjf0y.coding-pages.com/2020/07/11/eureka/\" title=\"spring cloud学习笔记——服务治理Eureka\">https://lxjf0y.coding-pages.com/2020/07/11/eureka/</a>"}}